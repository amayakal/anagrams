/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package anagrams;

/**
 *
 * @author Aniket
 */
//Generated by GuiGenie - Copyright (c) 2004 Mario Awad.
//Home Page http://guigenie.cjb.net - Check often for new versions!

import java.awt.*;
import java.awt.event.*;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.event.*;

public class Anagrams extends JPanel {
    private JButton Button_Fire;
    private JLabel lable;
    private JTextField anword;
    private JTextArea output;
    private JScrollPane sp;

    public Anagrams() throws MalformedURLException, IOException {
        //construct components
        Button_Fire = new JButton ("Fire!");
        lable = new JLabel ("Enter Word:");
        anword = new JTextField (1);
        output = new JTextArea (100, 100);
        
        sp = new JScrollPane(output); 
        

        
        /*JScrollPane areaScrollPane = new JScrollPane(output);
        areaScrollPane.setVerticalScrollBarPolicy(
                JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        areaScrollPane.setPreferredSize(new Dimension(250, 250));*/


        //adjust size and set layout
        setPreferredSize (new Dimension (308, 359));
        setLayout (null);

        //add components
        add (Button_Fire);
        add (lable);
        add (anword);
        //add (output);
        add (sp);
        
        //output.scrollRectToVisible();

        //set component bounds (only needed by Absolute Positioning)
        Button_Fire.setBounds (90, 70, 95, 30);
        lable.setBounds (10, 25, 100, 25);
        anword.setBounds (115, 25, 180, 25);
        //output.setBounds (30, 120, 225, 215);
        sp.setBounds(30, 120, 225, 215);
        
        //sp.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        
        Button_Fire.addActionListener(new OpenAction());
        
        
        
        
          
        
        
    }


    public static void main (String[] args) throws MalformedURLException, IOException {
        JFrame frame = new JFrame ("Anagrams");
        frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
        frame.getContentPane().add (new Anagrams());
        frame.pack();
        frame.setVisible (true);
    }
    
    class OpenAction implements ActionListener {
 
 public void actionPerformed(ActionEvent e)   {
     
     if (e.getSource() == Button_Fire){
     
         
         
         output.removeAll();
         
         
         //String pnword = new String("R I L E U D B");
         String pnword = anword.getText();
         
         pnword = pnword.replace(' ', '+');
   
    System.out.println("word:"+pnword);
    
    URL url = null;
         try {
             url = new URL("http://www.ssynth.co.uk/~gay/cgi-bin/nph-an?line="+pnword+"&words=1&dict=antworth&doai=on");
         } catch (MalformedURLException ex) {
             Logger.getLogger(Anagrams.class.getName()).log(Level.SEVERE, null, ex);
         }
    URLConnection conn = null;
         try {
             conn = url.openConnection();
         } catch (IOException ex) {
             Logger.getLogger(Anagrams.class.getName()).log(Level.SEVERE, null, ex);
         }
         
    DataInputStream in = null ;
         try {
             in = new DataInputStream ( conn.getInputStream (  )  );
         } catch (IOException ex) {
             Logger.getLogger(Anagrams.class.getName()).log(Level.SEVERE, null, ex);
         }
    BufferedReader d = new BufferedReader(new InputStreamReader(in));
         try {
             while(d.ready())
             {
                 String s= new String();
                 s=d.readLine();
                 if(s.startsWith("<pre>"))
                 {   System.out.println(s);
                    output.setText(s+"\n");
                     while((d.ready())&&(!(s=d.readLine()).startsWith("</pre>")))
                     {
                         System.out.println(s);
                         output.append(s+"\n");
                     }
                 }
             }
         } catch (IOException ex) {
             Logger.getLogger(Anagrams.class.getName()).log(Level.SEVERE, null, ex);
         }
        
         
         
         
         
         
         anword.setText("");
         
         
         
     }
     
 }
    }
}
